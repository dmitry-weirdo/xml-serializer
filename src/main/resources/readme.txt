# Что можно улучшить (но не сделано в силу недостатка времени и необязательности по ТЗ)
- настраивать log4j целиком стандартным форматом log4j.properties, в отдельном файле
- путь к properties-файлу настроек передавать в аргументах командной строки
- десериализовать из xml-файла и с помощью JAXB, а не вручную DOM-парсером, как в ТЗ
- сообщения для пользователя выводить через log4j (настроить другой логгер относительно приложения), а не через System.out
- сделать сборку конфигурации для запуска приложения (с рядом лежащими файлами и библиотеками)
- добавить команду help для отображения хэлпа по запуску приложения из командной строки
- для генерации тестовых данных в параметр командной строки принимать признак, генерировать ли описание (description)
- регистрировать JDBC-драйвер только если он еще не зарегистрирован.
- сделать специальную команду для теста транзакций, которые откатятся (например, вставка тестовых данных со слишком длинными полями)
- кодировку xml-файлов можно было бы задавать в параметре командной строки или в проперти-файле настроек
- delete запросы для пачки записей выполнять через where id in (...), это будет работать быстрее, чем отдельные удаления по id
- также delete запросы для пачки записей можно выбирать where id in (...) или where not id in (...) с той точки зрения, в каком in будет меньше записей
- параметры принимать к самому bat-файлу, а не к вызову внутри него java.exe. Впрочем, это относится к написанию bat-файлов, а не java-программ.
- не успел написать тесты собственно на выполнение цикла команд программы. Но прилагаются контрольные примеры xml-файлов и запуска bat-файла.
- команды из командной строки можно принимать регистро-независимо (просто перед парсингом делать toUpperCase)
- подправить логи "were" на "was" в зависимости от количества связанного числительного.
- джавадоки написаны не на всех полях, но на подавляющем большинстве важных полей и методов есть.


# Как запустить приложение
В качестве БД взял то, что было установлено на домашнем компе - Firebird 2.5.
Нужно установить Firebird, и запустить его сервис на стандартном порте (3050).
Базу данных передаю просто в виде файла. Кодировка БД - UTF-8.
Соответственно, путь к файлу БД нужно прописать в xmlSerializer.properties.
Если хочется создать БД с нуля - скрипт createTables.sql присутствует в исходниках.

Проект нужно запускать под java 1.7.*

В файле run.bat используется путь к java.exe относительно %java_home%. Для примера, у меня %java_home% выглядит как "C:\Program Files\Java\jdk1.7.0_21\"
Если %java_home% прописана в path, можно заменить "%java_home%\bin\java" просто на "java",

Файл run.bat содержит примеры вызова для всех команд.

Если имя файла лога в property-файле не указано, то он будет называться по умолчанию - xmlSerializer.log и находиться в директории приложения.

Команда вставки тестовых данных INSERT_TEST_DATA _удалит все существующие в БД записи_!

# Дополнительно
Проекта на google-code (можно поднять исходники по SVN): https://code.google.com/p/xml-serializer/

В некоторых местах в коде используются утилитные методы из моей библиотеки kefir, исходники которой также можно посмотреть на google-code: https://code.google.com/p/pda-kefir/

Мавеновская сборка и прогон тестов будут работать, если установить в локальный репозиторий kefir (модули kefir-util и kefir-gen). Как их описывать - можно понять по pom.xml.
